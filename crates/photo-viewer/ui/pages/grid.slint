import { VerticalBox, HorizontalBox, Button, ScrollView, Slider } from "std-widgets.slint";
import { PhotoData, GridPageStore } from "../store.slint";

component PhotoThumbnail {
    in property <PhotoData> photo;
    in property <bool> selected: false;
    in property <float> item-width: 280;
    in property <float> item-height: 200;
    callback clicked();
    
    width: item-width * 1px;
    height: item-height * 1px;
    
    Rectangle {
        width: 100%;
        height: 100%;
        border-width: selected ? 3px : 1px;
        border-color: selected ? #2196F3 : #ddd;
        border-radius: 4px;
        background: #f5f5f5;
        
        TouchArea {
            clicked => { root.clicked(); }
        }
        
        VerticalBox {
            padding: 10px;
            spacing: 8px;
            
            // Image placeholder (will be replaced with actual images)
            Rectangle {
                height: (item-height - 50) * 1px;
                background: #e0e0e0;
                border-radius: 4px;
                
                Text {
                    text: "üñºÔ∏è";
                    font-size: 48px * GridPageStore.zoom;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                }
            }
            
            // Filename
            Text {
                text: photo.filename;
                font-size: 12px;
                horizontal-alignment: center;
                overflow: elide;
            }
        }
    }
}

export component GridPage {
    in property <[PhotoData]> photos: [];
    in property <int> current_index: 0;
    
    callback photo-clicked(int);
    callback back-clicked();
    callback reimport-clicked();
    
    VerticalLayout {
        spacing: 0;
        
        // Top Toolbar
        Rectangle {
            height: 60px;
            background: #f8f9fa;
            
            HorizontalLayout {
                padding-left: 20px;
                padding-right: 20px;
                padding-top: 10px;
                padding-bottom: 10px;
                spacing: 15px;
                
                // Back button
                Button {
                    text: "‚Üê Back";
                    width: 100px;
                    clicked => { back-clicked(); }
                }
                
                // Title
                Text {
                    text: "Photo Grid (" + photos.length + " photos)";
                    font-size: 16px;
                    font-weight: 600;
                    vertical-alignment: center;
                }
                
                Rectangle { horizontal-stretch: 1; }
                
                // Zoom controls
                HorizontalLayout {
                    spacing: 10px;
                    
                    Text {
                        text: "Zoom:";
                        vertical-alignment: center;
                    }
                    
                    Text {
                        text: Math.round(GridPageStore.zoom * 100) + "%";
                        font-weight: 600;
                        vertical-alignment: center;
                        min-width: 50px;
                    }
                    
                    Slider {
                        width: 150px;
                        minimum: 0.5;
                        maximum: 3.0;
                        value <=> GridPageStore.zoom;
                        
                        changed(value) => {
                            GridPageStore.zoom_changed(value);
                        }
                    }
                }
                
                Rectangle { width: 20px; }
                
                // Reimport button
                Button {
                    text: "Import Different Album";
                    clicked => { reimport-clicked(); }
                }
            }
        }
        
        // Main content area - Maximum space for grid
        Rectangle {
            background: white;
            
            if photos.length == 0: VerticalLayout {
                alignment: center;
                
                Text {
                    text: "No photos found";
                    font-size: 18px;
                    color: #999;
                    horizontal-alignment: center;
                }
                
                Rectangle { height: 20px; }
                
                Button {
                    text: "Import Photos";
                    primary: true;
                    clicked => { reimport-clicked(); }
                }
            }
            
            if photos.length > 0: ScrollView {
                width: 100%;
                height: 100%;
                viewport-width: self.visible-width;
                viewport-height: GridPageStore.total_size * 1px;
                
                // Virtual grid container
                Rectangle {
                    height: GridPageStore.total_size * 1px;
                    background: white;
                    
                    // Render only visible items from VirtualGrid
                    for vitem in GridPageStore.visible_items: Rectangle {
                        // Calculate item position based on virtual grid data
                        property <length> item-width-calc: ((parent.width / 1px) / GridPageStore.columns - GridPageStore.gap * 2) * 1px;
                        property <length> col-width: ((parent.width / 1px) / GridPageStore.columns) * 1px;
                        
                        x: (vitem.column * col-width) + ((vitem.column + 1) * GridPageStore.gap * 1px);
                        y: vitem.start * 1px;
                        width: item-width-calc;
                        
                        // Render photo if index is valid
                        if vitem.index >= 0 && vitem.index < photos.length: PhotoThumbnail {
                            photo: photos[vitem.index];
                            selected: current_index == vitem.index;
                            item-height: vitem.height;
                            item-width: vitem.width;
                            
                            clicked => {
                                photo-clicked(vitem.index);
                            }
                        }
                    }
                }
                
                // Handle scroll - viewport-y is negative
                scrolled() => {
                    GridPageStore.scroll_changed(-self.viewport-y / 1px);
                    GridPageStore.viewport_changed(self.visible-width / 1px, self.visible-height / 1px);
                }
            }
        }
    }
}
