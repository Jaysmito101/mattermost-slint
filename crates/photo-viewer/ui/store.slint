// Page enumeration
export enum AppPage {
    Welcome,
    Import,
    Grid,
    Loupe,
}

// Photo data structure
export struct PhotoData {
    filename: string,
    path: string,
    index: int,
}

// Album data
export struct AlbumData {
    path: string,
    photo_count: int,
}

// Global navigation store
export global NavStore {
    in-out property <AppPage> current_page: AppPage.Welcome;
    in-out property <bool> is_loading: false;
    in-out property <string> error_message: "";
}

// Global photo store
export global PhotoStore {
    in-out property <AlbumData> album: { path: "", photo_count: 0 };
    in-out property <[PhotoData]> photos: [];
    in-out property <int> current_index: 0;
    
    // Callbacks
    callback photos_loaded([PhotoData]);
}

// Import page store with callbacks
export global ImportPageStore {
    callback browse_clicked();
    callback load_clicked();
}

// Virtual item data for grid
export struct VirtualItemData {
    index: int,
    start: float,      // y position
    height: float,       // height
    width: float,       // width
    row: int,
    column: int,
}

// Grid page store with callbacks and virtual scrolling
export global GridPageStore {
    // Virtual scrolling properties
    in-out property <[VirtualItemData]> visible_items: [];
    in-out property <float> total_size: 0;
    in-out property <float> zoom: 1.0;
    in-out property <float> scroll_offset: 0;
    in-out property <int> columns: 4;
    in-out property <float> gap: 8;
    
    // Callbacks
    callback photo_clicked(int);
    callback back_clicked();
    callback reimport_clicked();
    callback scroll_changed(float);
    callback zoom_changed(float);
    callback viewport_changed(float, float);
}

// Loupe page store with callbacks
export global LoupePageStore {
    callback back_clicked();
    callback prev_clicked();
    callback next_clicked();
}

